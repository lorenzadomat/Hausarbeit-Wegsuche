#ifndef FONT_FS_HPP
#define FONT_FS_HPP

#include <string>

const std::string font_fs =
"#version 330 core\n"
"\n"
"#ifdef GL_ES\n"
"precision mediump float;\n"
"#endif\n"
"\n"
"uniform sampler2D uTexture;\n"
"uniform vec4 uFillColor;\n"
"uniform vec4 uStrokeColor;\n"
"uniform int uDoFill;\n"
"uniform int uDoStroke;\n"
"uniform float uStrokeWeight;\n"
"\n"
"in vec2 vUV;\n"
"out vec4 fragColor;\n"
"\n"
"       vec3 glyph_color    = uFillColor.rgb;\n"
"const float glyph_center   = 0.50;\n"
"       vec3 outline_color  = uStrokeColor.rgb;\n"
"float outline_center = 0.5 + clamp(uStrokeWeight, 0.0, 1.0);\n"
"       vec3 glow_color     = vec3(0.0,0.0,0.0);\n"
"const float glow_center    = 1.25;\n"
"\n"
"void main(void) {\n"
"    vec4  color = texture(uTexture, vUV);\n"
"    float dist  = color.r;\n"
"    float width = fwidth(dist);\n"
"    float alpha = smoothstep(glyph_center - width, glyph_center + width, dist);\n"
"\n"
"    if (uDoFill == 1) {\n"
"        if (uDoStroke == 1) {\n"
"            float mu = smoothstep(outline_center - width, outline_center + width, dist);\n"
"            vec3 rgb = mix(outline_color, glyph_color, mu);\n"
"            fragColor = vec4(rgb, max(alpha, mu));\n"
"        } else {\n"
"            fragColor = vec4(glyph_color, alpha);\n"
"        }\n"
"        fragColor.a = min(fragColor.a, uFillColor.a);\n"
"    } else {\n"
"        if (uDoStroke == 1) {\n"
"            float mu = smoothstep(outline_center - width, outline_center + width, dist);\n"
"            fragColor = mix(vec4(0.0), uStrokeColor, clamp(alpha - mu, 0.0, 1.0));\n"
"        } else {\n"
"            fragColor = vec4(0.0);\n"
"        }\n"
"    }\n"
"\n"
"    // Glow\n"
"    // vec3 rgb = mix(glow_color, glyph_color, alpha);\n"
"    // float mu = smoothstep(glyph_center, glow_center, sqrt(dist));\n"
"    // fragColor = vec4(rgb, max(alpha, mu));\n"
"\n"
"    // Glow + outline\n"
"    // vec3 rgb = mix(glow_color, glyph_color, alpha);\n"
"    // float mu = smoothstep(glyph_center, glow_center, sqrt(dist));\n"
"    // color = vec4(rgb, max(alpha, mu));\n"
"    // float beta = smoothstep(outline_center - width, outline_center + width, dist);\n"
"    // rgb = mix(outline_color, color.rgb, beta);\n"
"    // fragColor = vec4(rgb, max(color.a, beta));\n"
"}\n"
;

#endif /* FONT_FS_HPP */
